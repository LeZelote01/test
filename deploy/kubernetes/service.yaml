apiVersion: v1
kind: Service
metadata:
  name: quantumgate-service
  namespace: quantumgate
  labels:
    app: quantumgate
spec:
  selector:
    app: quantumgate
  ports:
  - name: http
    port: 80
    targetPort: 80
    protocol: TCP
  - name: api
    port: 8001
    targetPort: 8001
    protocol: TCP
  type: LoadBalancer
---
apiVersion: v1
kind: Service
metadata:
  name: mongodb-service
  namespace: quantumgate
  labels:
    app: mongodb
spec:
  selector:
    app: mongodb
  ports:
  - name: mongodb
    port: 27017
    targetPort: 27017
    protocol: TCP
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb-deployment
  namespace: quantumgate
  labels:
    app: mongodb
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
      - name: mongodb
        image: mongo:5.0
        ports:
        - containerPort: 27017
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              name: mongodb-secrets
              key: root-username
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mongodb-secrets
              key: root-password
        - name: MONGO_INITDB_DATABASE
          value: quantumgate
        volumeMounts:
        - name: mongodb-data
          mountPath: /data/db
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "200m"
      volumes:
      - name: mongodb-data
        persistentVolumeClaim:
          claimName: mongodb-pvc
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongodb-pvc
  namespace: quantumgate
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: v1
kind: Secret
metadata:
  name: mongodb-secrets
  namespace: quantumgate
type: Opaque
data:
  root-username: YWRtaW4=  # admin
  root-password: cGFzc3dvcmQ=  # password
---
apiVersion: v1
kind: Namespace
metadata:
  name: quantumgate
  labels:
    name: quantumgate
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: quantumgate-ingress
  namespace: quantumgate
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  tls:
  - hosts:
    - quantumgate.example.com
    secretName: quantumgate-tls
  rules:
  - host: quantumgate.example.com
    http:
      paths:
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: quantumgate-service
            port:
              number: 8001
      - path: /
        pathType: Prefix
        backend:
          service:
            name: quantumgate-service
            port:
              number: 80